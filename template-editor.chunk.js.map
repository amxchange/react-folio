{"version":3,"file":"template-editor.chunk.js","mappings":"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","sources":["webpack://amx-ui-components/./src/d-app/modules/utils/FormField.jsx","webpack://amx-ui-components/./src/d-app/modules/TemplateEditor/MonacoEditor/index.jsx","webpack://amx-ui-components/./src/d-app/modules/TemplateEditor/MonacoEditor/EditorPreview.jsx","webpack://amx-ui-components/./src/d-app/modules/TemplateEditor/MonacoEditor/EditorContext.jsx","webpack://amx-ui-components/./src/d-app/modules/TemplateEditor/EditorWrapper.jsx","webpack://amx-ui-components/./src/shared/services/ApiService.js","webpack://amx-ui-components/./src/d-app/config/index.js","webpack://amx-ui-components/./src/d-app/modules/TemplateEditor/index.jsx","webpack://amx-ui-components/./src/d-app/modules/utils/ContentWrapper.jsx","webpack://amx-ui-components/./src/d-app/styles/utils/_form-field.scss?2b78"],"sourcesContent":["import React, { useEffect, useImperativeHandle, useRef, useState } from \"react\";\nimport { useAsyncState } from \"@shared/modules/utils/customHooks\";\nimport \"@d-app/styles/utils/_form-field.scss\";\n\n// import TextField from \"@material-ui/core/TextField\";\nconst TextField = React.forwardRef(\n    ({ id, label, value, onChangeInput, helperText, errorMsg, containerClass = \"\", ...restProps }, ref) => {\n        return (\n            <div\n                className={`form-group${errorMsg ? \" form-group-error\" : \"\"}${\n                    containerClass ? \" \" + containerClass : \"\"\n                }`}\n            >\n                {label && (\n                    <label className=\"form-control-label\" htmlFor={id}>\n                        {label}\n                    </label>\n                )}\n                <input\n                    ref={ref}\n                    id={id}\n                    className={`form-control-alternative form-control`}\n                    value={value}\n                    onChange={e => onChangeInput(e.target.value)}\n                    {...restProps}\n                />\n                <span className={`form-control-helper-text`}>{helperText}</span>\n            </div>\n        );\n    }\n);\n\nimport Select from \"react-select\";\nconst SelectField = React.forwardRef(\n    (\n        {\n            id,\n            label,\n            options = [],\n            value,\n            defaultValue,\n            onChangeInput,\n            disabled,\n            helperText,\n            errorMsg,\n            containerClass = \"\",\n            ...restProps\n        },\n        ref\n    ) => {\n        useEffect(() => {\n            /**\n             * scenario 1 - if value is passed instead of object and is present in the given options\n             */\n            if (value !== \"\" && typeof value !== \"object\") {\n                let val = options.find(opt => opt.value === value);\n                if (val) {\n                    onChangeInput(val);\n                }\n            }\n\n            /**\n             * scenario 2 - if defaultValue is passed\n             */\n            if (value === \"\" && defaultValue !== \"\") {\n                if (typeof defaultValue === \"object\") {\n                    let val = options.find(opt => opt.value === defaultValue.value);\n                    if (val) {\n                        onChangeInput(val);\n                    }\n                } else {\n                    let val = options.find(opt => opt.value === defaultValue);\n                    if (val) {\n                        onChangeInput(val);\n                    }\n                }\n            }\n\n            /**\n             * scenario 1 - populate single option\n             */\n            if (options.length === 1) {\n                onChangeInput(options[0]);\n            }\n\n            return () => {};\n        }, [value, defaultValue, options]);\n\n        return (\n            <div\n                className={`form-group${errorMsg ? \" form-group-error\" : \"\"}${\n                    containerClass ? \" \" + containerClass : \"\"\n                }`}\n            >\n                {label && (\n                    <label className=\"form-control-label\" htmlFor={id}>\n                        {label}\n                    </label>\n                )}\n                <Select\n                    ref={ref}\n                    id={id}\n                    styles={{\n                        control: (styles, state) => ({\n                            ...styles,\n                            ...(state.isFocussed\n                                ? {\n                                      boxShadow: \"none\"\n                                  }\n                                : {}),\n                            height: \"43px\",\n                            border: 0,\n                            borderRadius: \"0.375rem\",\n                            boxShadow: \"0 1px 3px rgb(50 50 93 / 15%), 0 1px 0 rgb(0 0 0 / 2%)\",\n                            WebkitBoxShadow: \"0 1px 3px rgb(50 50 93 / 15%), 0 1px 0 rgb(0 0 0 / 2%)\",\n                            transition: \"box-shadow 0.15s ease, -webkit-box-shadow 0.15s ease\"\n                        })\n                    }}\n                    options={options}\n                    value={value}\n                    onChange={newVal => onChangeInput(newVal)}\n                    isDisabled={disabled}\n                    {...restProps}\n                />\n                <span className={`form-control-helper-text`}>{helperText}</span>\n            </div>\n        );\n    }\n);\n\nconst DateTimeField = React.forwardRef(\n    ({ id, label, value, onChangeInput, helperText, errorMsg, ...restProps }, ref) => {\n        return (\n            <div className={`form-group${errorMsg ? \" form-group-error\" : \"\"}`}>\n                <label className=\"form-control-label\" htmlFor={id}>\n                    {label}\n                </label>\n                <input\n                    style={{ width: \"100%\", color: !value ? \"transparent\" : \"\" }}\n                    className={\"form-control-alternative form-control\"}\n                    type=\"date\"\n                    id={id}\n                    value={value ? new Date(timeRange.min).toISOString().split(\"T\")[0] : \"\"}\n                    onChange={e => onChangeInput(new Date(e.target.value).valueOf())}\n                />\n                <span className={`form-control-helper-text`}>{helperText}</span>\n            </div>\n        );\n    }\n);\n\nconst commonValidationProfiles = {\n    default(val, config = {}) {\n        if (val === \"\" || val === null || val === undefined) {\n            let emptyErr = config.emptyErr || `Please enter ${config.label || config.hiddenLabel || \"this field\"}`;\n            return {\n                valid: false,\n                errorMsg: emptyErr\n            };\n        } else {\n            return {\n                valid: true\n            };\n        }\n    },\n    email(val, config = {}) {\n        // let regex = /^([^\\x00-\\x20\\x22\\x28\\x29\\x2c\\x2e\\x3a-\\x3c\\x3e\\x40\\x5b-\\x5d\\x7f-\\xff]+|\\x22([^\\x0d\\x22\\x5c\\x80-\\xff]|\\x5c[\\x00-\\x7f])*\\x22)(\\x2e([^\\x00-\\x20\\x22\\x28\\x29\\x2c\\x2e\\x3a-\\x3c\\x3e\\x40\\x5b-\\x5d\\x7f-\\xff]+|\\x22([^\\x0d\\x22\\x5c\\x80-\\xff]|\\x5c[\\x00-\\x7f])*\\x22))*\\x40([^\\x00-\\x20\\x22\\x28\\x29\\x2c\\x2e\\x3a-\\x3c\\x3e\\x40\\x5b-\\x5d\\x7f-\\xff]+|\\x5b([^\\x0d\\x5b-\\x5d\\x80-\\xff]|\\x5c[\\x00-\\x7f])*\\x5d)(\\x2e([^\\x00-\\x20\\x22\\x28\\x29\\x2c\\x2e\\x3a-\\x3c\\x3e\\x40\\x5b-\\x5d\\x7f-\\xff]+|\\x5b([^\\x0d\\x5b-\\x5d\\x80-\\xff]|\\x5c[\\x00-\\x7f])*\\x5d))*$/\n        let regex = /^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i;\n        let valid = regex.test(val);\n        return {\n            valid,\n            errorMsg: `Please Enter Valid ${config.label || config.hiddenLabel || \"Input\"}`\n        };\n    }\n};\n\nconst getValidators = validationProfileKeys => {\n    let validators = (validationProfileKeys || []).map(v => {\n        if (commonValidationProfiles[v] === undefined) {\n            if (typeof v === \"function\") return v;\n            if (v instanceof RegExp || validationService.validRegex(v)) {\n                let regExp = v;\n                if (validationService.validRegex(v)) regExp = validationService.regexpStringToObj(v);\n                return value => ({\n                    valid: regExp.test(value),\n                    errorMsg: \"Invalid Input\"\n                });\n            }\n            console.error(`no validation profile found for ${v}`);\n        }\n        return commonValidationProfiles[v];\n    });\n    return validators;\n};\n\nconst REGEX_SPLITTER = \"REGEX_SPLITTER\";\n\nconst validationService = {\n    regexpStringToObj(regexpString) {\n        let regexpMatcher = /\\/(.+)\\/([gmiyus]{0,6})/;\n        let regexpWithoutSlashes = regexpString.replace(regexpMatcher, `$1${REGEX_SPLITTER}$2`);\n        return new RegExp(...regexpWithoutSlashes.split(REGEX_SPLITTER));\n    },\n    validRegex(str) {\n        let isValid = true;\n        try {\n            new RegExp(str);\n        } catch (e) {\n            isValid = false;\n        }\n        return isValid;\n    },\n    validate(validators, { value, config }) {\n        let results = [];\n        for (let i = 0; i < validators.length; i++) {\n            let validator = validators[i];\n            if (validator) results.push(validator(value, config));\n        }\n        return results;\n    }\n};\n\nconst formFields = {\n    text: TextField,\n    select: SelectField,\n    date: DateTimeField\n};\n\nconst FormField = React.forwardRef(\n    (\n        {\n            controlled = false,\n            type = \"text\",\n            id = `uniqId-${+new Date()}`,\n            value = \"\",\n            onChange,\n            disabled,\n            required,\n            validationProfiles, // registered common validation methods\n            inputValidator, // custom validation method\n            inputValidations, // validate user input before setting it in state\n            liveValidations, // validate on every input update\n            ...restProps\n        },\n        ref\n    ) => {\n        let fieldOpts = {\n            // options that are to be passed ahead\n            type,\n            id,\n            disabled,\n            ...restProps\n        };\n\n        const inputRef = useRef();\n        const [_value, setValue] = useAsyncState(\"\");\n        const [errorMsg, setErrorMsg] = useState(\"\");\n\n        useEffect(() => {}, []);\n\n        const focus = () => inputRef.current.focus();\n\n        const getVal = () => (controlled ? value : _value);\n\n        const setVal = val => setValue(val);\n\n        const setError = msg => setErrorMsg(msg);\n\n        const clearError = () => setErrorMsg(\"\");\n\n        const val = val => {\n            if (val === undefined) return getVal();\n            return setVal(val);\n        };\n\n        const isValid = () => {\n            if ((required === false && getVal() === \"\") || disabled) {\n                clearError();\n                return true;\n            }\n            let validators = [\n                ...(inputValidator ? [inputValidator] : []),\n                ...getValidators(validationProfiles ? [\"default\", ...validationProfiles] : [\"default\"])\n            ];\n            let validationResults = validationService.validate(validators, {\n                value: getVal(),\n                fieldOpts\n            });\n            let errors = validationResults.filter(v => !v.valid);\n            if (errors.length) setError(errors[0].errorMsg);\n            return errorMsg ? false : errors.length === 0; /* In case error is set explicitly */\n        };\n\n        const isInputValid = value => {\n            let validators = getValidators(inputValidations);\n            let validationResults = validationService.validate(validators, {\n                value,\n                fieldOpts\n            });\n            return validationResults.every(v => v.valid === true);\n        };\n\n        const liveValidate = value => {\n            let liveValidators = getValidators(liveValidations || [\"default\"]);\n            let validationResults = validationService.validate(liveValidators, {\n                value,\n                fieldOpts\n            });\n            let errors = validationResults.filter(v => v.valid === false);\n            if (errors.length) setError(errors[0].errorMsg);\n        };\n\n        const onChangeInput = async (newVal, notFromUser) => {\n            if (inputValidations && !isInputValid(newVal)) return;\n            clearError();\n            if (controlled) {\n                if (liveValidations) liveValidate(newVal);\n                if (onChange) onChange(newVal);\n                return;\n            }\n            await setVal(newVal);\n            if (liveValidations) liveValidate(newVal);\n            if (onChange && !notFromUser) onChange(newVal);\n        };\n\n        useImperativeHandle(ref, () => ({\n            focus,\n            isValid,\n            val,\n            setError,\n            clearError\n        }));\n\n        let Field = formFields[type];\n        if (!Field) {\n            Field = formFields[\"text\"];\n            console.error(`FormField type : ${type} not found, falling back to 'text'`);\n        }\n        return (\n            <Field\n                ref={inputRef}\n                value={controlled ? value : _value}\n                onChangeInput={onChangeInput}\n                errorMsg={errorMsg}\n                helperText={errorMsg} // later accomodate warning and default texts\n                {...fieldOpts}\n            />\n        );\n    }\n);\n\nexport default FormField;\n","import React, { useState, useRef } from \"react\";\nimport Editor from \"@monaco-editor/react\";\nimport { useEffect } from \"react\";\n\nconst getCompletionItem = ({ path, key, value, kind, range }) => ({\n    label: path,\n    kind,\n    documentation: `${path} = ${JSON.stringify(value)}`,\n    insertText: path,\n    range\n});\n\nconst convertObjectIntoArrayOfKeys = (obj, rootKey, kind, range) => {\n    let arr = [];\n    for (const key in obj) {\n        const value = obj[key];\n        let type = Object.prototype.toString.call(value);\n        let path = `${rootKey ? rootKey + \".\" : \"\"}${key}`;\n        if (type === \"[object Object]\") {\n            let subArr = convertObjectIntoArrayOfKeys(value, path, kind, range);\n            arr = arr.concat(subArr);\n        } else {\n            arr.push(getCompletionItem({ path, key, value, kind, range }));\n        }\n    }\n    return arr;\n};\n\nconst MonacoEditor = props => {\n    const { theme, language, value, setValue, completetionItemsJsonStr } = props;\n\n    const editorRef = useRef(null);\n    const monacoRef = useRef(null);\n    const disposeCompletionItems = useRef(null);\n\n    useEffect(() => {\n        return () => {\n            if (disposeCompletionItems.current) {\n                disposeCompletionItems.current.dispose();\n            }\n        };\n    }, []);\n\n    useEffect(() => {\n        if (completetionItemsJsonStr) {\n            let completetionItemsObj = JSON.parse(completetionItemsJsonStr);\n\n            if (disposeCompletionItems.current) {\n                disposeCompletionItems.current.dispose();\n            }\n\n            console.log(\"registering completion items\", completetionItemsObj);\n            disposeCompletionItems.current = monacoRef.current.languages.registerCompletionItemProvider(\"html\", {\n                triggerCharacters: [\"{\", \".\"],\n                provideCompletionItems: function (model, position) {\n                    var textUntilPosition = model.getValueInRange({\n                        startLineNumber: position.lineNumber,\n                        startColumn: 1,\n                        endLineNumber: position.lineNumber,\n                        endColumn: position.column\n                    });\n                    // var match = textUntilPosition.match(/\\$\\{data.[\\w.]*$/);\n                    var match = textUntilPosition.match(/\\{\\{[\\w.]*$/);\n                    if (!match) {\n                        return {\n                            suggestions: []\n                        };\n                    }\n                    var word = model.getWordUntilPosition(position);\n                    var range = {\n                        startLineNumber: position.lineNumber,\n                        endLineNumber: position.lineNumber,\n                        startColumn: word.startColumn,\n                        endColumn: word.endColumn\n                    };\n                    let suggestionKind = monacoRef.current.languages.CompletionItemKind.Function;\n                    let suggestions = convertObjectIntoArrayOfKeys(completetionItemsObj, null, suggestionKind, range);\n                    return {\n                        suggestions\n                    };\n                }\n            });\n        }\n    }, [completetionItemsJsonStr]);\n\n    function handleEditorWillMount(monaco) {\n        console.log(\"beforeMount: the monaco instance:\", monaco);\n    }\n\n    function handleEditorDidMount(editor, monaco) {\n        console.log(\"onMount: the editor instance:\", editor);\n        console.log(\"onMount: the monaco instance:\", monaco);\n\n        editorRef.current = editor;\n        monacoRef.current = monaco;\n    }\n\n    function handleEditorChange(newValue, event) {\n        setValue(newValue);\n    }\n\n    function handleEditorValidation(markers) {\n        // model markers\n        markers.forEach(marker => console.log(\"onValidate:\", marker.message));\n    }\n\n    return (\n        <Editor\n            theme={theme}\n            beforeMount={handleEditorWillMount}\n            onMount={handleEditorDidMount}\n            language={language}\n            value={value}\n            onChange={handleEditorChange}\n            onValidate={handleEditorValidation}\n            options={{}}\n        />\n    );\n};\n\nexport default MonacoEditor;\n\n/**\n * https://github.com/portabletext/react-portabletext\n * https://www.npmjs.com/package/react-simple-code-editor\n * https://codesandbox.io/s/u6vhk?file=/src/Editor.js\n * https://codesandbox.io/s/react-live-editor-jgm04?from-embed=&file=/src/editor.js\n */\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { ToastUtil } from \"@shared/modules/utils\";\n\nfunction EditorPreview(props) {\n    const { isViewed, value, data = {} } = props;\n\n    const iframeRef = useRef();\n\n    useEffect(() => {\n        if (isViewed && value) {\n            let previewValue = value;\n\n            try {\n                const template = Handlebars.compile(value);\n                previewValue = template(data);\n            } catch (error) {\n                ToastUtil.error(`${error.message}`);\n            }\n\n            console.log(\"EditorPreview writing..\");\n            iframeRef.current.contentWindow.document.open();\n            iframeRef.current.contentWindow.document.write(previewValue);\n            iframeRef.current.contentWindow.document.close();\n        }\n    });\n\n    return (\n        <>\n            <iframe ref={iframeRef} />\n        </>\n    );\n}\n\nexport default EditorPreview;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { Row, Col, Button } from \"reactstrap\";\nimport Editor from \"@monaco-editor/react\";\nimport { ToastUtil } from \"@shared/modules/utils\";\n\nfunction isJsonString(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}\n\nfunction EditorContext(props) {\n    const { setCompletetionItemsJsonStr } = props;\n    const [value, setValue] = useState(\"\");\n    const [isRegistered, setIsRegistered] = useState(false);\n\n    const handleRegister = () => {\n        if (!value) return ToastUtil.info(\"Please enter value to proceed\");\n        if (isJsonString(value)) {\n            setIsRegistered(true);\n            setCompletetionItemsJsonStr(value);\n        } else {\n            ToastUtil.error(\"Invalid input value\");\n        }\n    };\n\n    function handleValidation(markers) {\n        // model markers\n        markers.forEach(marker => console.log(\"onValidate:\", marker.message));\n    }\n\n    return (\n        <Row>\n            <Col xs=\"12\">\n                <h4>Data</h4>\n                <div>\n                    <Editor\n                        height={\"50vh\"}\n                        theme={\"light\"}\n                        beforeMount={() => {}}\n                        onMount={() => {}}\n                        language={\"json\"}\n                        value={value}\n                        onChange={newVal => setValue(newVal)}\n                        onValidate={handleValidation}\n                        options={{\n                            minimap: { enabled: false },\n                            readOnly: isRegistered\n                        }}\n                    />\n                </div>\n                <div className=\"mt-4\">\n                    <Button\n                        color=\"primary\"\n                        onClick={e => {\n                            if (value) {\n                                if (isJsonString(value)) {\n                                    setValue(JSON.stringify(JSON.parse(value), undefined, 4));\n                                } else {\n                                    ToastUtil.error(\"Invalid input value\");\n                                }\n                            } else {\n                                ToastUtil.info(\"Please enter value to proceed\");\n                            }\n                        }}\n                        size=\"sm\"\n                    >\n                        validate json\n                    </Button>\n                    <Button color=\"default\" onClick={e => setValue(\"\")} size=\"sm\">\n                        clear\n                    </Button>\n                    <Button\n                        color=\"primary\"\n                        onClick={e => (isRegistered ? setIsRegistered(false) : handleRegister())}\n                        size=\"sm\"\n                    >\n                        {isRegistered ? \"modify\" : \"register\"}\n                    </Button>\n                </div>\n            </Col>\n        </Row>\n    );\n}\n\nexport default EditorContext;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { Row, Col, Button, Card, CardHeader, CardFooter, Collapse } from \"reactstrap\";\nimport Tabs, { TabPane } from \"rc-tabs\";\nimport \"rc-tabs/assets/index.css\";\nimport FormField from \"@d-app/modules/utils/FormField\";\nimport { ToastUtil } from \"@shared/modules/utils\";\nimport {\n    convertStringToNode,\n    // convertNodeToString,\n    toJSON,\n    // toDOM,\n    maskThymeleafExpressions\n    // unmaskThymeleafExpressions\n} from \"@shared/utils\";\nimport MonacoEditor from \"@d-app/modules/TemplateEditor/MonacoEditor\";\nimport EditorPreview from \"@d-app/modules/TemplateEditor/MonacoEditor/EditorPreview\";\nimport EditorContext from \"@d-app/modules/TemplateEditor/MonacoEditor/EditorContext\";\n\nconst EDITOR_LANGUAGE_OPTIONS = [\n    { label: \"handlebars\", value: \"handlebars\" },\n    { label: \"html\", value: \"html\" }\n    // { label: \"javascript\", value: \"javascript\" }\n];\nconst EDITOR_THEME_OPTIONS = [\n    { label: \"Light\", value: \"light\" },\n    { label: \"Dark\", value: \"vs-dark\" }\n];\n\nconst EditorWrapper = props => {\n    const { title = \"\", mode, collapse = false, setCollapse, data = {}, onAction, reset } = props;\n\n    const [value, setValue] = useState(\"<!-- Please ensure to wrap content inside a valid html tag --!>\");\n    const [completetionItemsJsonStr, setCompletetionItemsJsonStr] = useState(\"\");\n\n    const emailRef = useRef();\n    const [emailVal, setEmailVal] = useState(\"\");\n\n    const commitMsgRef = useRef();\n    const [commitMsgVal, setCommitMsgVal] = useState(\"\");\n\n    const [editorLanguage, setEditorLanguage] = useState(EDITOR_LANGUAGE_OPTIONS[0]);\n    const [editorTheme, setEditorTheme] = useState(EDITOR_THEME_OPTIONS[0]);\n\n    const [activeTab, setActiveTab] = useState(\"editor\");\n\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        if (mode === \"UPDATE\") {\n            const content = atob(data.content);\n            setValue(content);\n        }\n    }, [data.content]);\n\n    const _onAction = async type => {\n        if (type === \"CREATE\" && !value) return ToastUtil.error(`Template content cannot be empty`);\n        if ([commitMsgRef.current.isValid(), emailRef.current.isValid()].includes(false)) return;\n\n        let content_json = \"\";\n        try {\n            let value_without_th_expressions = maskThymeleafExpressions(value);\n            let content_dom = convertStringToNode(value_without_th_expressions);\n            content_json = toJSON(content_dom);\n\n            // let content_dom_again = toDOM(content_json);\n            // let value_again = convertNodeToString(content_dom_again);\n            // let value_with_th_expressions = unmaskThymeleafExpressions(value_again);\n        } catch (error) {\n            console.error(\"error while converting template string to json object \", error);\n        }\n\n        let payload = {\n            email: emailVal,\n            commitMessage: commitMsgVal,\n            ...(type !== \"DELETE\" ? { content: btoa(value), content_json } : {})\n        };\n\n        try {\n            setLoading(true);\n            if (onAction) await onAction(payload, type);\n            setTimeout(() => {\n                reset && reset();\n            }, 500);\n        } catch (error) {\n            console.log(\"Action failed - \", type);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    return (\n        <Card className=\"shadow\">\n            {/* <CardHeader>\n                <Row className=\"align-items-center\">\n                    <Col xs=\"8\">{title && <h3 className=\"mb-0\">{title}</h3>}</Col>\n                    <Col className=\"text-right\" xs=\"4\">\n                        <Button color=\"primary\" onClick={e => {}} size=\"sm\">\n                            Preview\n                        </Button>\n                        <Button color=\"primary\" onClick={e => setCollapse && setCollapse(prev => !prev)} size=\"sm\">\n                            {collapse ? \"Expand\" : \"Hide\"}\n                        </Button>\n                    </Col>\n                </Row>\n            </CardHeader> */}\n            <Collapse isOpen={!collapse}>\n                <div className=\"px-4 mb-4\">\n                    <Row>\n                        <Col xs=\"12\">\n                            <Tabs onChange={key => setActiveTab(key)} tabBarGutter={30}>\n                                <TabPane tab=\"Editor\" key=\"editor\">\n                                    <div className={\"tab-content\"}>\n                                        <Row className=\"tab-content-header\">\n                                            <Col xs=\"2\">\n                                                <FormField\n                                                    controlled={true}\n                                                    type={\"select\"}\n                                                    label={\"Input Language\"}\n                                                    value={editorLanguage}\n                                                    onChange={newVal => {\n                                                        setEditorLanguage(newVal);\n                                                    }}\n                                                    options={EDITOR_LANGUAGE_OPTIONS}\n                                                />\n                                            </Col>\n                                            <Col xs=\"2\">\n                                                <FormField\n                                                    controlled={true}\n                                                    type={\"select\"}\n                                                    label={\"Theme\"}\n                                                    value={editorTheme}\n                                                    onChange={newVal => {\n                                                        setEditorTheme(newVal);\n                                                    }}\n                                                    options={EDITOR_THEME_OPTIONS}\n                                                />\n                                            </Col>\n                                        </Row>\n                                        <Row className=\"tab-content-body\">\n                                            <Col>\n                                                <MonacoEditor\n                                                    theme={editorTheme.value}\n                                                    language={editorLanguage.value}\n                                                    value={value}\n                                                    setValue={setValue}\n                                                    completetionItemsJsonStr={completetionItemsJsonStr}\n                                                />\n                                            </Col>\n                                        </Row>\n                                    </div>\n                                </TabPane>\n                                <TabPane tab=\"Context\" key=\"context\">\n                                    <div className={\"tab-content\"}>\n                                        <EditorContext setCompletetionItemsJsonStr={setCompletetionItemsJsonStr} />\n                                    </div>\n                                </TabPane>\n                                <TabPane tab=\"Preview\" key=\"preview\">\n                                    <div className={\"tab-content\"}>\n                                        <EditorPreview\n                                            isViewed={activeTab === \"preview\"}\n                                            value={value}\n                                            data={\n                                                completetionItemsJsonStr\n                                                    ? JSON.parse(completetionItemsJsonStr)\n                                                    : undefined\n                                            }\n                                        />\n                                    </div>\n                                </TabPane>\n                            </Tabs>\n                        </Col>\n                    </Row>\n                </div>\n                <CardFooter className=\"py-4\">\n                    <Row>\n                        <Col lg=\"4\">\n                            <FormField\n                                ref={commitMsgRef}\n                                controlled={true}\n                                type={\"text\"}\n                                placeholder={\"Commit message\"}\n                                value={commitMsgVal}\n                                onChange={newVal => setCommitMsgVal(newVal)}\n                            />\n                        </Col>\n                        <Col lg=\"4\">\n                            <FormField\n                                ref={emailRef}\n                                controlled={true}\n                                type={\"text\"}\n                                placeholder={\"Commit email\"}\n                                value={emailVal}\n                                onChange={newVal => setEmailVal(newVal)}\n                            />\n                        </Col>\n                        <Col className=\"text-right\">\n                            {mode == \"UPDATE\" ? (\n                                <>\n                                    <Button\n                                        color=\"primary\"\n                                        onClick={e => (loading ? () => {} : _onAction(\"UPDATE\"))}\n                                        size=\"md\"\n                                    >\n                                        {loading ? \"loading...\" : \"Update\"}\n                                    </Button>\n                                    <Button\n                                        color=\"danger\"\n                                        onClick={e => (loading ? () => {} : _onAction(\"DELETE\"))}\n                                        size=\"md\"\n                                    >\n                                        {loading ? \"loading...\" : \"Delete\"}\n                                    </Button>\n                                </>\n                            ) : (\n                                <Button\n                                    color=\"primary\"\n                                    onClick={e => (loading ? () => {} : _onAction(\"CREATE\"))}\n                                    size=\"md\"\n                                >\n                                    {loading ? \"loading...\" : \"Create\"}\n                                </Button>\n                            )}\n                            <Button color=\"default\" onClick={e => reset && reset()} size=\"md\">\n                                Cancel\n                            </Button>\n                        </Col>\n                    </Row>\n                </CardFooter>\n            </Collapse>\n        </Card>\n    );\n};\n\nexport default EditorWrapper;\n","import axios from \"axios\";\nimport { serializeParams } from \"@shared/utils\";\nimport { remoteServerUrl } from \"@d-app/config\";\n\nexport class ApiService {\n    constructor({ prefix = \"\", responseBuilder = res => res } = {}) {\n        this.prefix = prefix;\n        this.responseBuilder = responseBuilder;\n    }\n\n    get = (url, data, options) => this.request({ url, method: \"get\", data, options });\n\n    post = (url, data, options) => this.request({ url, method: \"post\", data, options });\n\n    put = (url, data, options) => this.request({ url, method: \"put\", data, options });\n\n    delete = (url, data, options) => this.request({ url, method: \"delete\", data, options });\n\n    postFormData = (url, data, options) => {\n        data = serializeParams(data);\n        return this.post(url, data, {\n            ...options,\n            headers: {\n                \"Content-Type\": \"application/x-www-form-urlencoded\",\n                ...options.headers\n            }\n        });\n    };\n\n    request = async ({ url, method, data, options = {} }) => {\n        url = this.getUrl({ url, options });\n        let axiosArgs = this.getAxiosArgs({ url, method, data, options });\n        try {\n            let response = await axios.request(axiosArgs);\n            if (\n                response.status !== 200\n                // || (response.data.statusKey !== \"SUCCESS\" && !(response.data instanceof Blob))\n            ) {\n                console.log(\n                    `%c ApiService request: ${url} (${method}) status non success: ${response}`,\n                    \"background: #701414; color: #bada55\"\n                );\n                console.log(`%c throwing`, \"background: #701414; color: #bada55\");\n                throw response;\n            }\n            return this.responseBuilder(response);\n        } catch (thrown) {\n            if (axios.isCancel(thrown)) {\n                console.log(\"Request canceled\", thrown.message);\n            } else {\n                if (\n                    false // add condition for need of custom interceptor in case of failure\n                ) {\n                    let interceptorResp = await this.errorResponseInterceptor({\n                        method,\n                        url,\n                        axiosArgs,\n                        response: thrown.response\n                    });\n                    return this.responseBuilder(interceptorResp);\n                }\n                console.log(\n                    `%c ApiService request: ${url} (${method}) catch: ${thrown.response}`,\n                    \"background: #701414; color: #bada55\"\n                );\n            }\n            throw thrown;\n        }\n    };\n\n    errorResponseInterceptor = ({ url, method, axiosArgs, response }) => {\n        return new Promise.resolve();\n    };\n\n    getUrl = ({ url, options = {} }) => {\n        let result = \"\";\n        let urlType =\n            options && options.urlType && typeof options.urlType === \"string\" ? options.urlType.toLowerCase() : \"\";\n        switch (urlType) {\n            case \"absolute\":\n                result = url;\n                break;\n            case \"relative\":\n                result = this.prefix + url;\n                break;\n            default:\n                result = this.prefix + url;\n        }\n        return result;\n    };\n\n    getAxiosArgs = ({ url, method, data, options = {} }) => {\n        let _options = {\n            ...options,\n            headers: {\n                Accept: \"application/json\",\n                ...options.headers\n            }\n        };\n        let axiosArgs = {\n            url,\n            method,\n            responseType: _options.responseType,\n            headers: _options.headers,\n            cancelToken: _options.cancelToken\n        };\n        switch (method) {\n            case \"get\":\n                axiosArgs = { ...axiosArgs, params: data };\n                break;\n            case \"post\":\n            case \"put\":\n            case \"delete\":\n                axiosArgs = { ...axiosArgs, data, params: _options.params };\n                break;\n            default:\n                break;\n        }\n        return axiosArgs;\n    };\n}\n\nexport const Api = {\n    root: new ApiService({\n        prefix:\n            (window.location.href.indexOf(\"github.io\") > -1 ? \"https://node-folio.amxremit.com\" : remoteServerUrl) +\n            \"/api/v1\",\n        responseBuilder: res => res.data\n    })\n};\n","export const remoteServerUrl = `http://localhost:3004`;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { Button, Card, CardHeader, CardBody, Row, Col, FormGroup, Form } from \"reactstrap\";\nimport ContentWrapper from \"@d-app/modules/utils/ContentWrapper\";\nimport FormField from \"@d-app/modules/utils/FormField\";\nimport EditorWrapper from \"@d-app/modules/TemplateEditor/EditorWrapper\";\nimport { Api } from \"@shared/services/ApiService\";\nimport { ToastUtil } from \"@shared/modules/utils\";\n\nconst REPO_URL = `https://gitlab.com/almullagroup/amx/owa-content-v2.git`;\nconst BRANCH_NAME = `main`;\nconst EDITOR_MODE_OPTIONS = [\n    { label: \"Update\", value: \"UPDATE\" },\n    { label: \"Create\", value: \"CREATE\" }\n];\nconst CHANNEL_OPTIONS = [\n    { label: \"Sms\", value: \"sms\" },\n    { label: \"Push Notification\", value: \"push\" }\n];\nconst LANGUAGE_OPTIONS = [\n    { label: \"English\", value: \"en\" },\n    { label: \"Arabic\", value: \"ar\" }\n];\nconst TENANT_OPTIONS = [\n    { label: \"KWT\", value: \"kwt\" },\n    { label: \"OMN\", value: \"omn\" }\n];\n\nconst TemplateEditor = props => {\n    const [loading, setLoading] = useState(false);\n\n    const [editorMode, setEditorMode] = useState(EDITOR_MODE_OPTIONS[0]);\n\n    const tenantRef = useRef();\n    const [tenantVal, setTenantVal] = useState(TENANT_OPTIONS[0]);\n\n    const channelRef = useRef();\n    const [channelVal, setChannelVal] = useState(\"\");\n\n    const languageRef = useRef();\n    const [languageVal, setLanguageVal] = useState(\"\");\n    const [languageOpts, setLanguageOpts] = useState(LANGUAGE_OPTIONS);\n\n    const templateNameRef = useRef();\n    const [templateNameVal, setTemplateNameVal] = useState(\"\");\n\n    const templateNameSelectRef = useRef();\n    const [templateNameSelectVal, setTemplateNameSelectVal] = useState(\"\");\n    const [templateNameSelectOpts, setTemplateNameSelectOpts] = useState([]);\n\n    const [templateData, setTemplateData] = useState(\"\");\n\n    const [showEditor, setShowEditor] = useState(false);\n    const [editorCollapse, setEditorCollapse] = useState(false);\n\n    useEffect(() => {\n        fetchTemplates();\n    }, []);\n\n    const fetchTemplates = async ({ tenant, channel, language } = {}) => {\n        let req = {\n            tenant: tenant === undefined ? tenantVal?.value : tenant,\n            channel: channel === undefined ? channelVal?.value : channel,\n            language: language === undefined ? languageVal?.value : language,\n            per_page: 100 //TODO\n        };\n        try {\n            setLoading(true);\n            let res = await Api.root.get(\"/template\", req);\n            // let res = {\n            //     success: true,\n            //     data: [\n            //         {\n            //             id: \"1ae3d82d3773e7dc24042d47e107fe4db9da02ed\",\n            //             name: \"BeneCreationSuccess.html\",\n            //             type: \"blob\",\n            //             path: \"ms-postman/src/main/resources/templates/html/wa/BeneCreationSuccess.html\",\n            //             mode: \"100644\"\n            //         },\n            //         {\n            //             id: \"5dfe9b2e04091836f87a619db2e608d7d1d0beb2\",\n            //             name: \"BirthdayWish.html\",\n            //             type: \"blob\",\n            //             path: \"ms-postman/src/main/resources/templates/html/wa/BirthdayWish.html\",\n            //             mode: \"100644\"\n            //         },\n            //         {\n            //             id: \"6d348dbfff0ce4985741531a7b53cb0cac24da7f\",\n            //             name: \"EkycAccepted.html\",\n            //             type: \"blob\",\n            //             path: \"ms-postman/src/main/resources/templates/html/wa/EkycAccepted.html\",\n            //             mode: \"100644\"\n            //         },\n            //         {\n            //             id: \"0e18b115cb2e01f3fc5f6be4d22d7a483a25cfb0\",\n            //             name: \"EkycAccountVerified.html\",\n            //             type: \"blob\",\n            //             path: \"ms-postman/src/main/resources/templates/html/wa/EkycAccountVerified.html\",\n            //             mode: \"100644\"\n            //         },\n            //         {\n            //             id: \"4383d2caa5f54f89412240b7a0436b185051f179\",\n            //             name: \"EkycDocumentRejected.html\",\n            //             type: \"blob\",\n            //             path: \"ms-postman/src/main/resources/templates/html/wa/EkycDocumentRejected.html\",\n            //             mode: \"100644\"\n            //         },\n            //         {\n            //             id: \"4383d2caa5f54f89412240b7a0436b185051f179\",\n            //             name: \"EkycRejected.html\",\n            //             type: \"blob\",\n            //             path: \"ms-postman/src/main/resources/templates/html/wa/EkycRejected.html\",\n            //             mode: \"100644\"\n            //         },\n            //         {\n            //             id: \"7959afd7179dc9a5954d0cc734a9d867c6c491d7\",\n            //             name: \"FcOutOfStockCustomer.html\",\n            //             type: \"blob\",\n            //             path: \"ms-postman/src/main/resources/templates/html/wa/FcOutOfStockCustomer.html\",\n            //             mode: \"100644\"\n            //         },\n            //         {\n            //             id: \"452612a30071ed77eb5ae93d47a31829784c8631\",\n            //             name: \"PaymentLink.html\",\n            //             type: \"blob\",\n            //             path: \"ms-postman/src/main/resources/templates/html/wa/PaymentLink.html\",\n            //             mode: \"100644\"\n            //         },\n            //         {\n            //             id: \"9ec6f46057745630be3d6c8268dd2285654e01cd\",\n            //             name: \"PlaceOrderConfirm.html\",\n            //             type: \"blob\",\n            //             path: \"ms-postman/src/main/resources/templates/html/wa/PlaceOrderConfirm.html\",\n            //             mode: \"100644\"\n            //         },\n            //         {\n            //             id: \"a587eed6faa11f740ddb97e72b637b2aca66ec9f\",\n            //             name: \"PolicyConfirmation.html\",\n            //             type: \"blob\",\n            //             path: \"ms-postman/src/main/resources/templates/html/wa/PolicyConfirmation.html\",\n            //             mode: \"100644\"\n            //         },\n            //         {\n            //             id: \"f30efb0497107680cd99b2fd0dec95877b113057\",\n            //             name: \"PolicyExpired.html\",\n            //             type: \"blob\",\n            //             path: \"ms-postman/src/main/resources/templates/html/wa/PolicyExpired.html\",\n            //             mode: \"100644\"\n            //         },\n            //         {\n            //             id: \"256985ffc0944973f34cf4ff73d1eb59894899c3\",\n            //             name: \"PolicyExpiryReminder.html\",\n            //             type: \"blob\",\n            //             path: \"ms-postman/src/main/resources/templates/html/wa/PolicyExpiryReminder.html\",\n            //             mode: \"100644\"\n            //         },\n            //         {\n            //             id: \"d29f17b08be0b9fd32b8b4bfee5eab300c7044e7\",\n            //             name: \"PolicyOptoutCustomer.html\",\n            //             type: \"blob\",\n            //             path: \"ms-postman/src/main/resources/templates/html/wa/PolicyOptoutCustomer.html\",\n            //             mode: \"100644\"\n            //         },\n            //         {\n            //             id: \"9e7043612f9970f063806737cdd0f6d0300c25d0\",\n            //             name: \"PolicyOptoutSystem.html\",\n            //             type: \"blob\",\n            //             path: \"ms-postman/src/main/resources/templates/html/wa/PolicyOptoutSystem.html\",\n            //             mode: \"100644\"\n            //         },\n            //         {\n            //             id: \"75249e0b82ce6a144104ff8eb011edb6140d2fc9\",\n            //             name: \"PolicyPendingTrnx.html\",\n            //             type: \"blob\",\n            //             path: \"ms-postman/src/main/resources/templates/html/wa/PolicyPendingTrnx.html\",\n            //             mode: \"100644\"\n            //         },\n            //         {\n            //             id: \"d26b22ea8e4e7f0b3b0e6e64f5f17b5592be6ca0\",\n            //             name: \"WUCancelReminder.html\",\n            //             type: \"blob\",\n            //             path: \"ms-postman/src/main/resources/templates/html/wa/WUCancelReminder.html\",\n            //             mode: \"100644\"\n            //         },\n            //         {\n            //             id: \"8aab59989a60191f26eabe862d334b80dee468e8\",\n            //             name: \"WUPickupReminder.html\",\n            //             type: \"blob\",\n            //             path: \"ms-postman/src/main/resources/templates/html/wa/WUPickupReminder.html\",\n            //             mode: \"100644\"\n            //         },\n            //         {\n            //             id: \"9773c6d02da977ac7ef2db0381745e4070966389\",\n            //             name: \"WUTrnxCancelled.html\",\n            //             type: \"blob\",\n            //             path: \"ms-postman/src/main/resources/templates/html/wa/WUTrnxCancelled.html\",\n            //             mode: \"100644\"\n            //         },\n            //         {\n            //             id: \"c25e585130a82ede9b3690e7ec7583975b920467\",\n            //             name: \"WUTrnxSuccess.html\",\n            //             type: \"blob\",\n            //             path: \"ms-postman/src/main/resources/templates/html/wa/WUTrnxSuccess.html\",\n            //             mode: \"100644\"\n            //         },\n            //         {\n            //             id: \"3bd4749965935b78f04564a040e64ef35b8041d7\",\n            //             name: \"bene-success-sms.html\",\n            //             type: \"blob\",\n            //             path: \"ms-postman/src/main/resources/templates/html/wa/bene-success-sms.html\",\n            //             mode: \"100644\"\n            //         },\n            //         {\n            //             id: \"89f0db031c66390d0eff45f1b2eb78b12f477b96\",\n            //             name: \"cash.html\",\n            //             type: \"blob\",\n            //             path: \"ms-postman/src/main/resources/templates/html/wa/cash.html\",\n            //             mode: \"100644\"\n            //         },\n            //         {\n            //             id: \"d1a48dba7d97627888682c711cb9e49a67c44a37\",\n            //             name: \"cash_AR.html\",\n            //             type: \"blob\",\n            //             path: \"ms-postman/src/main/resources/templates/html/wa/cash_AR.html\",\n            //             mode: \"100644\"\n            //         },\n            //         {\n            //             id: \"8afd2124dfd934a2485a887e49c5e7adc1654b37\",\n            //             name: \"civilexpired.html\",\n            //             type: \"blob\",\n            //             path: \"ms-postman/src/main/resources/templates/html/wa/civilexpired.html\",\n            //             mode: \"100644\"\n            //         },\n            //         {\n            //             id: \"abba713407157c6b8f419f832fab4b835f7787ce\",\n            //             name: \"civilexpiry.html\",\n            //             type: \"blob\",\n            //             path: \"ms-postman/src/main/resources/templates/html/wa/civilexpiry.html\",\n            //             mode: \"100644\"\n            //         },\n            //         {\n            //             id: \"3315065234f520323a6aa0d3bee95064ef85fc51\",\n            //             name: \"eft.html\",\n            //             type: \"blob\",\n            //             path: \"ms-postman/src/main/resources/templates/html/wa/eft.html\",\n            //             mode: \"100644\"\n            //         },\n            //         {\n            //             id: \"52cbed179887aada744082d13fef6162d1a4d4ff\",\n            //             name: \"eft_AR.html\",\n            //             type: \"blob\",\n            //             path: \"ms-postman/src/main/resources/templates/html/wa/eft_AR.html\",\n            //             mode: \"100644\"\n            //         },\n            //         {\n            //             id: \"8110626c44f3d61552eaf89c16709af9323c69c0\",\n            //             name: \"order-success.html\",\n            //             type: \"blob\",\n            //             path: \"ms-postman/src/main/resources/templates/html/wa/order-success.html\",\n            //             mode: \"100644\"\n            //         },\n            //         {\n            //             id: \"a4de1ca7a788106cb063e0865ee5443b281abc53\",\n            //             name: \"place-order.html\",\n            //             type: \"blob\",\n            //             path: \"ms-postman/src/main/resources/templates/html/wa/place-order.html\",\n            //             mode: \"100644\"\n            //         },\n            //         {\n            //             id: \"957ff8cbafae9fef3973e6be1d017e07f091cc3b\",\n            //             name: \"resend-verification.html\",\n            //             type: \"blob\",\n            //             path: \"ms-postman/src/main/resources/templates/html/wa/resend-verification.html\",\n            //             mode: \"100644\"\n            //         },\n            //         {\n            //             id: \"293e0ca942c76a96e11d56c724df2903338c6d46\",\n            //             name: \"reset-otp-sms.html\",\n            //             type: \"blob\",\n            //             path: \"ms-postman/src/main/resources/templates/html/wa/reset-otp-sms.html\",\n            //             mode: \"100644\"\n            //         },\n            //         {\n            //             id: \"6981da00ff8296c8fc1af366f27de6c69ae31cd9\",\n            //             name: \"trnx-feedback.html\",\n            //             type: \"blob\",\n            //             path: \"ms-postman/src/main/resources/templates/html/wa/trnx-feedback.html\",\n            //             mode: \"100644\"\n            //         },\n            //         {\n            //             id: \"f208c2b2e11abe83cc1c8cd53bb5536d9a2ae7f2\",\n            //             name: \"tt.html\",\n            //             type: \"blob\",\n            //             path: \"ms-postman/src/main/resources/templates/html/wa/tt.html\",\n            //             mode: \"100644\"\n            //         },\n            //         {\n            //             id: \"0702737ef9886d10c32db9f730106181f9a6ea8e\",\n            //             name: \"tt_AR.html\",\n            //             type: \"blob\",\n            //             path: \"ms-postman/src/main/resources/templates/html/wa/tt_AR.html\",\n            //             mode: \"100644\"\n            //         }\n            //     ]\n            // };\n            let _templateNameSelectOpts = res.data.map(t => ({ label: t.name, value: t.name, path: t.path }));\n            setTemplateNameSelectOpts(_templateNameSelectOpts);\n            if (!_templateNameSelectOpts.length) {\n                setTemplateNameSelectVal(\"\");\n            }\n        } catch (error) {\n            console.error(error);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const fetchTemplate = async () => {\n        if (!templateNameSelectRef.current.isValid()) return;\n        let req = {\n            templatePath: templateNameSelectVal.path\n        };\n        try {\n            setLoading(true);\n            let res = await Api.root.get(`/template/${templateNameSelectVal.value}`, req);\n            // let res = {\n            //     success: true,\n            //     data: {\n            //         file_name: \"BirthdayWish.html\",\n            //         file_path: \"ms-postman/src/main/resources/templates/html/wa/BirthdayWish.html\",\n            //         size: 140,\n            //         encoding: \"base64\",\n            //         content_sha256: \"a6654f5d4a4e67b9da8f9b10cbbd75839dbdaa19359ec9a2ed866c6c66165ba2\",\n            //         ref: \"fs_template_editor_dev\",\n            //         blob_id: \"5dfe9b2e04091836f87a619db2e608d7d1d0beb2\",\n            //         commit_id: \"379d6a9d10a4340ebfdad1e785340af541b10ea6\",\n            //         last_commit_id: \"d40e5a548a3bfdbffc03c3e43a9aa62e78bb9e69\",\n            //         execute_filemode: false,\n            //         content:\n            //             \"PGh0bWwgdGg6aW5saW5lPSJ0ZXh0IiB0aDpyZW1vdmU9InRhZyI+W1ske190dS5wcm9wKCdjb21wYW55Lm5hbWUnKX1dXSB3aXNoZXMgeW91IGEgVmVyeSBIYXBweSBCaXJ0aGRheSBhbmQgYSBwcm9zcGVyb3VzIHllYXIgYWhlYWQhPC9odG1sPgo=\"\n            //     }\n            // };\n            setTemplateData(res.data);\n            setShowEditor(true);\n        } catch (error) {\n            console.error(error);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const onProceed = () => {\n        if (editorMode.value === \"CREATE\") {\n            if (!templateNameRef.current.isValid()) return;\n            setShowEditor(true);\n        } else {\n            fetchTemplate();\n        }\n    };\n\n    const onAction = async (req, type) => {\n        if (type === \"CREATE\") {\n            req.tenant = tenantVal?.value;\n            req.channel = channelVal?.value;\n            req.language = languageVal?.value;\n        }\n        req.templatePath = templateNameSelectVal.path;\n        let actionTypeMeta = {\n            CREATE: { label: \"Create\", method: \"post\" },\n            UPDATE: { label: \"Update\", method: \"put\" },\n            DELETE: { label: \"Delete\", method: \"delete\" }\n        };\n        try {\n            await Api.root[actionTypeMeta[type].method](\n                `/template/${type === \"CREATE\" ? templateNameVal : templateNameSelectVal.value}`,\n                req\n            );\n            ToastUtil.success(actionTypeMeta[type].label + \" successful\");\n            return \"success\";\n        } catch (error) {\n            ToastUtil.error(actionTypeMeta[type].label + \" failed\");\n            throw error;\n        }\n    };\n\n    const reset = ({ avoidResetTemplates } = {}) => {\n        setShowEditor(false);\n        setTenantVal(TENANT_OPTIONS[0]);\n        setChannelVal(\"\");\n        setLanguageVal(\"\");\n        setTemplateNameVal(\"\");\n        setTemplateNameSelectVal(\"\");\n        setTemplateData(\"\");\n        if (!avoidResetTemplates) fetchTemplates({ channel: null, language: null });\n    };\n\n    return (\n        <ContentWrapper>\n            <Row>\n                <Col className=\"order-xl-1\" xl=\"12\">\n                    <Card className=\"bg-secondary shadow\">\n                        <CardHeader className=\"bg-white border-0\">\n                            <Row className=\"align-items-center\">\n                                <Col xs=\"8\">\n                                    <Row className=\"align-items-center\">\n                                        <Col xs=\"2\">\n                                            <h3 className=\"mb-0\">Editor mode</h3>\n                                        </Col>\n                                        <Col xs=\"4\">\n                                            <FormField\n                                                controlled={true}\n                                                type={\"select\"}\n                                                value={editorMode}\n                                                onChange={newVal => {\n                                                    setEditorMode(newVal);\n                                                    reset({ avoidResetTemplates: true });\n                                                }}\n                                                options={EDITOR_MODE_OPTIONS}\n                                                containerClass={\"mb-0\"}\n                                            />\n                                        </Col>\n                                    </Row>\n                                </Col>\n                                <Col className=\"text-right\" xs=\"4\">\n                                    <Button color=\"primary\" onClick={e => reset()} size=\"sm\">\n                                        Reset\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </CardHeader>\n                        <CardBody>\n                            <Form>\n                                <h6 className=\"heading-small text-muted mb-0\">Gitlab details</h6>\n                                <p style={{ opacity: \"0.5\" }}>\n                                    &#62;&#62; {REPO_URL} &nbsp;&nbsp;&#62;&#62; {BRANCH_NAME}\n                                </p>\n                                <div className=\"pl-lg-4\">\n                                    <Row>\n                                        <Col lg=\"2\">\n                                            <FormField\n                                                ref={tenantRef}\n                                                controlled={true}\n                                                type={\"select\"}\n                                                label={\"Tenant\"}\n                                                value={tenantVal}\n                                                onChange={newVal => {\n                                                    setTenantVal(newVal);\n                                                    fetchTemplates({ tenant: newVal?.value || null });\n                                                }}\n                                                options={TENANT_OPTIONS}\n                                                disabled={showEditor}\n                                            />\n                                        </Col>\n                                        <Col lg=\"2\">\n                                            <FormField\n                                                ref={channelRef}\n                                                controlled={true}\n                                                type={\"select\"}\n                                                label={\"Channel\"}\n                                                value={channelVal}\n                                                onChange={newVal => {\n                                                    setChannelVal(newVal);\n                                                    fetchTemplates({ channel: newVal?.value || null });\n                                                }}\n                                                options={CHANNEL_OPTIONS}\n                                                isClearable={true}\n                                                disabled={showEditor}\n                                            />\n                                        </Col>\n                                        <Col lg=\"2\">\n                                            <FormField\n                                                ref={languageRef}\n                                                controlled={true}\n                                                type={\"select\"}\n                                                label={\"Language\"}\n                                                value={languageVal}\n                                                onChange={newVal => {\n                                                    setLanguageVal(newVal);\n                                                    fetchTemplates({ language: newVal?.value || null });\n                                                }}\n                                                options={languageOpts}\n                                                isClearable={true}\n                                                disabled={showEditor}\n                                            />\n                                        </Col>\n                                        <Col lg=\"3\">\n                                            {editorMode.value == \"CREATE\" ? (\n                                                <FormField\n                                                    ref={templateNameRef}\n                                                    controlled={true}\n                                                    type={\"text\"}\n                                                    label={\"Template Name\"}\n                                                    value={templateNameVal}\n                                                    onChange={newVal => {\n                                                        setTemplateNameVal(newVal);\n                                                    }}\n                                                    disabled={showEditor}\n                                                />\n                                            ) : (\n                                                <FormField\n                                                    ref={templateNameSelectRef}\n                                                    controlled={true}\n                                                    type={\"select\"}\n                                                    label={\"Template Name\"}\n                                                    value={templateNameSelectVal}\n                                                    onChange={newVal => {\n                                                        setTemplateNameSelectVal(newVal);\n                                                    }}\n                                                    options={templateNameSelectOpts}\n                                                    disabled={showEditor}\n                                                />\n                                            )}\n                                        </Col>\n                                        <Col lg=\"1\">\n                                            <FormGroup style={{ marginTop: \"30px\" }}>\n                                                <Button\n                                                    color=\"primary\"\n                                                    onClick={e => (loading ? () => {} : onProceed())}\n                                                    size=\"md\"\n                                                    disabled={showEditor}\n                                                >\n                                                    {loading ? \"loading...\" : \"Proceed\"}\n                                                </Button>\n                                            </FormGroup>\n                                        </Col>\n                                    </Row>\n                                </div>\n                                <hr className=\"my-4\" />\n                            </Form>\n                            {/* Editor */}\n                            {showEditor ? (\n                                <Row className=\"mt-4\">\n                                    <div className=\"col\">\n                                        <EditorWrapper\n                                            title={`Editor`}\n                                            mode={editorMode.value}\n                                            collapse={editorCollapse}\n                                            setCollapse={setEditorCollapse}\n                                            data={templateData}\n                                            onAction={onAction}\n                                            reset={reset}\n                                        />\n                                    </div>\n                                </Row>\n                            ) : null}\n                        </CardBody>\n                    </Card>\n                </Col>\n            </Row>\n        </ContentWrapper>\n    );\n};\n\nexport default TemplateEditor;\n","import React from \"react\";\nimport { Container } from \"reactstrap\";\n\nconst ContentWrapper = (props) => {\n    return (\n        <>\n            {/* content header */}\n            <div className=\"header bg-gradient-info pb-8 pt-5 pt-md-8\">\n                <Container fluid>\n                    <div className=\"header-body\">\n                        {props.contentHeader}\n                    </div>\n                </Container>\n            </div>\n            {/* content body */}\n            <Container className=\"mt--7\" fluid style={{ minHeight: \"519px\" }}>\n                {props.children}\n            </Container>\n        </>\n    );\n};\n\nexport default ContentWrapper;\n","// extracted by mini-css-extract-plugin\nexport {};\n    if(module.hot) {\n      // 1662546005131\n      var cssReload = require(\"../../../../node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  "],"names":["i","commonValidationProfiles","val","config","emptyErr","label","hiddenLabel","valid","errorMsg","email","regex","test","getValidators","validationProfileKeys","map","v","undefined","RegExp","validationService","validRegex","regExp","regexpStringToObj","value","console","error","REGEX_SPLITTER","regexpString","regexpWithoutSlashes","replace","split","str","isValid","e","validate","validators","results","length","validator","push","formFields","text","React","ref","id","onChangeInput","helperText","containerClass","restProps","className","htmlFor","onChange","target","select","options","defaultValue","disabled","useEffect","find","opt","styles","control","state","isFocussed","boxShadow","height","border","borderRadius","WebkitBoxShadow","transition","newVal","isDisabled","date","style","width","color","type","Date","timeRange","min","toISOString","valueOf","controlled","required","validationProfiles","inputValidator","inputValidations","liveValidations","fieldOpts","inputRef","useRef","useAsyncState","_value","setValue","useState","setErrorMsg","focus","current","getVal","setVal","setError","msg","clearError","errors","filter","isInputValid","every","liveValidate","liveValidators","notFromUser","useImperativeHandle","Field","getCompletionItem","path","key","kind","range","documentation","JSON","stringify","insertText","convertObjectIntoArrayOfKeys","obj","rootKey","arr","Object","prototype","toString","call","subArr","concat","props","theme","language","completetionItemsJsonStr","editorRef","monacoRef","disposeCompletionItems","dispose","completetionItemsObj","parse","log","languages","registerCompletionItemProvider","triggerCharacters","provideCompletionItems","model","position","getValueInRange","startLineNumber","lineNumber","startColumn","endLineNumber","endColumn","column","match","suggestions","word","getWordUntilPosition","suggestionKind","CompletionItemKind","Function","beforeMount","monaco","onMount","editor","newValue","event","onValidate","markers","forEach","marker","message","isViewed","data","iframeRef","previewValue","Handlebars","compile","template","ToastUtil","contentWindow","document","open","write","close","isJsonString","setCompletetionItemsJsonStr","isRegistered","setIsRegistered","Row","Col","xs","minimap","enabled","readOnly","Button","onClick","size","handleRegister","EDITOR_LANGUAGE_OPTIONS","EDITOR_THEME_OPTIONS","title","mode","collapse","setCollapse","onAction","reset","emailRef","emailVal","setEmailVal","commitMsgRef","commitMsgVal","setCommitMsgVal","editorLanguage","setEditorLanguage","editorTheme","setEditorTheme","activeTab","setActiveTab","loading","setLoading","content","atob","_onAction","includes","content_json","value_without_th_expressions","maskThymeleafExpressions","content_dom","convertStringToNode","toJSON","payload","commitMessage","btoa","setTimeout","Card","Collapse","isOpen","tabBarGutter","tab","CardFooter","lg","placeholder","Api","root","prefix","responseBuilder","res","url","request","method","serializeParams","post","headers","getUrl","axiosArgs","getAxiosArgs","axios","response","status","interceptorResp","Promise","resolve","urlType","toLowerCase","_options","Accept","responseType","cancelToken","params","this","window","location","href","indexOf","EDITOR_MODE_OPTIONS","CHANNEL_OPTIONS","LANGUAGE_OPTIONS","TENANT_OPTIONS","editorMode","setEditorMode","tenantRef","tenantVal","setTenantVal","channelRef","channelVal","setChannelVal","languageRef","languageVal","setLanguageVal","languageOpts","templateNameRef","templateNameVal","setTemplateNameVal","templateNameSelectRef","templateNameSelectVal","setTemplateNameSelectVal","templateNameSelectOpts","setTemplateNameSelectOpts","templateData","setTemplateData","showEditor","setShowEditor","editorCollapse","setEditorCollapse","fetchTemplates","tenant","channel","req","per_page","get","_templateNameSelectOpts","t","name","fetchTemplate","templatePath","actionTypeMeta","CREATE","UPDATE","DELETE","avoidResetTemplates","ContentWrapper","xl","CardHeader","CardBody","Form","opacity","isClearable","FormGroup","marginTop","onProceed","fluid","contentHeader","minHeight","children","cssReload","module","hot","accept"],"sourceRoot":""}