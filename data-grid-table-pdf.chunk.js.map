{"version":3,"file":"data-grid-table-pdf.chunk.js","mappings":";ogBACA,8hGAAAA,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,0oDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,6zCAMA,SAASC,EAAaC,GAClB,IACIC,KAAKC,MAAMF,GACb,MAAOG,GACL,OAAO,EAEX,OAAO,EA8GX,QA3GyB,SAAAC,GACrB,SAA8BC,EAAAA,EAAAA,WAAS,GAAvC,GAAOC,EAAP,KAAgBC,EAAhB,KAEA,KAA0BF,EAAAA,EAAAA,UAAS,2vBAAnC,GAAOG,EAAP,KAAcC,EAAd,KAiCMC,EAAM,gCAAG,uFACNF,EADM,yCACQG,EAAAA,GAAAA,KAAe,0CADvB,WAEPZ,EAAaS,GAFN,iCAICI,EAAMX,KAAKC,MAAMM,GACrBD,GAAW,GALR,SAMGM,EAAAA,EAAAA,KAAAA,KAAc,4BAA6BD,EAAK,CAClDE,aAAc,OACdC,QAAS,CACLC,OAAQ,qBATb,yDAaHC,QAAQC,MAAR,MAbG,yBAeHX,GAAW,GAfR,6CAkBPI,EAAAA,GAAAA,MAAgB,uBAlBT,8OAAH,qDAsBZ,OACI,gBAAC,IAAD,KACI,gBAAC,IAAD,KACI,gBAAC,IAAD,CAAKQ,UAAU,eAAeC,GAAG,MAC7B,gBAAC,IAAD,CAAMD,UAAU,UACZ,gBAAC,IAAD,CAAYA,UAAU,kBAClB,gBAAC,IAAD,CAAKA,UAAU,sBACX,uBAAKA,UAAU,OACX,sBAAIA,UAAU,QAAd,qCAIZ,gBAAC,IAAD,KACI,uBAAKA,UAAU,aACX,0CACA,gBAAC,IAAD,KACI,gBAAC,IAAD,CAAKE,GAAG,MACJ,gBAAC,KAAD,CACIC,OAAQ,OACRC,MAAO,QACPC,YAAa,aACbC,QAAS,aACTC,SAAU,OACVlB,MAAOA,EACPmB,SAAU,SAAAC,GAAM,OAAInB,EAASmB,IAC7BC,WAnDf,SAAAC,GACrBA,EAAQC,SAAQ,SAAAC,GAAM,OAAIf,QAAQgB,IAAI,cAAeD,EAAOE,aAmDxBC,QAAS,CACLC,QAAS,CAAEC,SAAS,GACpBC,UAAU,OAK1B,gBAAC,IAAD,KACI,gBAAC,IAAD,CAAKjB,GAAG,MACJ,gBAAC,IAAD,CAAQkB,MAAM,UAAUC,QAAS,kBAAM9B,MAClCJ,EAAU,aAAe","sources":["webpack://amx-ui-components/./src/d-app/modules/DataGridTablePdf/index.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Button, Card, CardBody, CardHeader, Row, Col } from \"reactstrap\";\nimport ContentWrapper from \"@d-app/modules/utils/ContentWrapper\";\nimport Editor from \"@monaco-editor/react\";\nimport { ToastUtil } from \"@shared/modules/utils\";\nimport { Api } from \"@shared/services/ApiService\";\n\nfunction isJsonString(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}\n\nconst DataGridTablePdf = props => {\n    const [loading, setLoading] = useState(false);\n\n    const [value, setValue] = useState(`{\n    \"tables\": [\n        {\n            \"descriptors\": [],\n            \"data\": [],\n            \"options\": {\n                \"page\": {\n                    \"header\": {\n                        \"title\": \"Almulla Exchange\",\n                        \"styles\": {\n                            \"font\": \"roboto\"\n                        }\n                    },\n                    \"footer\": {\n                        \"styles\": {\n                            \"font\": \"roboto\"\n                        }\n                    },\n                    \"table\": {\n                        \"styles\": {\n                            \"font\": \"roboto\"\n                        }\n                    }\n                }\n            }            \n        }\n    ]\n}`);\n\n    const handleValidation = markers => {\n        markers.forEach(marker => console.log(\"onValidate:\", marker.message));\n    };\n\n    const getPdf = async () => {\n        if (!value) return ToastUtil.info(\"Please enter value or '{}' to proceed\");\n        if (isJsonString(value)) {\n            try {\n                let req = JSON.parse(value);\n                setLoading(true);\n                await Api.root.post(\"/grid/data-grid-table-pdf\", req, {\n                    responseType: \"blob\",\n                    headers: {\n                        Accept: \"application/pdf\"\n                    }\n                });\n            } catch (error) {\n                console.error(error);\n            } finally {\n                setLoading(false);\n            }\n        } else {\n            ToastUtil.error(\"Invalid input value\");\n        }\n    };\n\n    return (\n        <ContentWrapper>\n            <Row>\n                <Col className=\"mb-5 mb-xl-0\" xl=\"12\">\n                    <Card className=\"shadow\">\n                        <CardHeader className=\"bg-transparent\">\n                            <Row className=\"align-items-center\">\n                                <div className=\"col\">\n                                    <h2 className=\"mb-0\">Convert Data-Grid Table to PDF</h2>\n                                </div>\n                            </Row>\n                        </CardHeader>\n                        <CardBody>\n                            <div className=\"px-4 mb-4\">\n                                <h3>Request JSON</h3>\n                                <Row>\n                                    <Col xs=\"12\">\n                                        <Editor\n                                            height={\"48vh\"}\n                                            theme={\"light\"}\n                                            beforeMount={() => {}}\n                                            onMount={() => {}}\n                                            language={\"json\"}\n                                            value={value}\n                                            onChange={newVal => setValue(newVal)}\n                                            onValidate={handleValidation}\n                                            options={{\n                                                minimap: { enabled: false },\n                                                readOnly: false\n                                            }}\n                                        />\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col xs=\"12\">\n                                        <Button color=\"primary\" onClick={() => getPdf()}>\n                                            {loading ? \"loading...\" : \"Get PDF\"}\n                                        </Button>\n                                    </Col>\n                                </Row>\n                            </div>\n                        </CardBody>\n                    </Card>\n                </Col>\n            </Row>\n        </ContentWrapper>\n    );\n};\n\nexport default DataGridTablePdf;\n"],"names":["i","isJsonString","str","JSON","parse","e","props","useState","loading","setLoading","value","setValue","getPdf","ToastUtil","req","Api","responseType","headers","Accept","console","error","className","xl","xs","height","theme","beforeMount","onMount","language","onChange","newVal","onValidate","markers","forEach","marker","log","message","options","minimap","enabled","readOnly","color","onClick"],"sourceRoot":""}